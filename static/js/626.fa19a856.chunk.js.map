{"version":3,"file":"static/js/626.fa19a856.chunk.js","mappings":"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","sources":["pages/CheckOut/Payment/Payment.js","webpack://2clothy/./src/pages/CheckOut/Payment/Payment.module.scss?8298"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport styles from './Payment.module.scss';\r\nimport Button from '~/components/Button';\r\nimport { Card } from '~/components/Icons';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CheckOutSlice from '~/redux/CheckOutSlice';\r\nimport { useEffect } from 'react';\r\nimport * as authServices from '~/services/authService';\r\nimport { authRemainingSelector } from '~/redux/selector';\r\nimport AuthSlice from '~/redux/AuthSlice';\r\nimport { createAxios } from '~/services/createInstance';\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction Payment() {\r\n    const user = useSelector(authRemainingSelector);\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const CheckoutPayment = useFormik({\r\n        initialValues: {},\r\n        validationSchema: Yup.object({\r\n            bankname: Yup.string().required('Bắt buộc!'),\r\n            owner: Yup.string().required('Bắt buộc!'),\r\n            numberCard: Yup.string().required('Bắt buộc!'),\r\n            dateExpired: Yup.string().required('Bắt buộc!'),\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n            const bank = dataBankType.find((item) => {\r\n                if (item.bankName == values.bankname) {\r\n                    return item.id;\r\n                }\r\n            });\r\n            const data = {\r\n                type: 'VNPAY',\r\n                info: {\r\n                    Id: userBank?.id,\r\n                    BankName: values.bankname,\r\n                    BankNumber: values.numberCard,\r\n                    BankCode: bank.bankCode,\r\n                    AccountName: values.owner,\r\n                    ExpiredDate: values.dateExpired,\r\n                    StartedDate: values.dateStarted,\r\n                    BankTypeId: bank.id,\r\n                },\r\n            };\r\n            console.log(data);\r\n\r\n            dispatch(CheckOutSlice.actions.handlePayment(data));\r\n            const fetchApi = async () => {\r\n                let { BankName, ...dataUpdateAPi } = data.info;\r\n                let { Id, ...dataAddAPi } = data.info;\r\n\r\n                if (!userBank) {\r\n                    const res = await authServices.addBank(dataAddAPi, accessToken, axiosJWT);\r\n                    setResBank(res);\r\n                } else {\r\n                    const res = await authServices.updateBank(dataUpdateAPi, accessToken, axiosJWT);\r\n                    setResBank(res);\r\n                }\r\n            };\r\n            fetchApi();\r\n        },\r\n    });\r\n    const [resBank, setResBank] = useState([]);\r\n    useEffect(() => {\r\n        console.log(resBank);\r\n        if (resBank.status == 200) {\r\n            navigate('/review');\r\n        }\r\n    }, [resBank]);\r\n\r\n    const [dataBankType, setDataBankType] = useState([]);\r\n    const [userBank, setUserBank] = useState([]);\r\n    let axiosJWT = createAxios(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const dataItem = await authServices.getTypeBanks(accessToken, axiosJWT);\r\n            const dataUserBank = await authServices.getUserBanks(accessToken, axiosJWT);\r\n            setDataBankType(dataItem);\r\n            CheckoutPayment.values.bankname = dataUserBank[0]?.bankName;\r\n            CheckoutPayment.values.numberCard = dataUserBank[0]?.bankNumber;\r\n            CheckoutPayment.values.owner = dataUserBank[0]?.accountName;\r\n            CheckoutPayment.values.dateExpired = dataUserBank[0]?.expiredDate;\r\n            CheckoutPayment.values.dateStarted = dataUserBank[0]?.startedDate;\r\n            setUserBank(dataUserBank[0]);\r\n        };\r\n        fetchApi();\r\n    }, []);\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <form onSubmit={CheckoutPayment.handleSubmit}>\r\n                <div className={cx('body')}>\r\n                    <div className={cx('tittle')}>\r\n                        <h2 className={cx('tittle-text')}>Hãy chọn phương thức thanh toán</h2>\r\n                        <p className={cx('tittle-tip')}>\r\n                            Bạn sẽ không bị tính phí cho đến khi bạn xem lại đơn đặt hàng này trên trang tiếp theo.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className={cx('form-box')}>\r\n                        <div className={cx('form-check')}>\r\n                            <input type=\"radio\" id=\"radio\" className={cx('form-check-radio')} />\r\n                            <div className={cx('form-check-group')}>\r\n                                <p className={cx('form-check-name')}>Thẻ ngân hàng </p>\r\n                                <label htmlFor=\"radio\" className={cx('form-check-iconList')}>\r\n                                    <span className={cx('form-check-icon')}>\r\n                                        <img\r\n                                            src=\"https://frontend.tikicdn.com/_desktop-next/static/img/icons/checkout/icon-payment-method-vnpay.png\"\r\n                                            loading=\"lazy\"\r\n                                            className={cx('form-check-icon-data')}\r\n                                        />\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={cx('form-group')}>\r\n                            <div className={cx('form-group-item')}>\r\n                                <label className={cx('form-group-item-label')} htmlFor=\"\">\r\n                                    Ngân hàng\r\n                                </label>\r\n\r\n                                <select\r\n                                    id=\"bankname\"\r\n                                    name=\"bankname\"\r\n                                    // value={CheckoutPayment.values.bankname}\r\n                                    onChange={CheckoutPayment.handleChange}\r\n                                    className={cx('form-group-item-input')}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nhập tên ngân hàng\"\r\n                                >\r\n                                    {!userBank && <option value=\"\" label=\"- - - - Chọn ngân hàng thanh toán - - - -\" selected />}\r\n                                    {dataBankType?.map((data, i) => (\r\n                                        <option\r\n                                            key={i}\r\n                                            value={data.bankName}\r\n                                            label={data.bankName}\r\n                                            selected={data.bankCode === userBank?.bankCode}\r\n                                        ></option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className={cx('form-group-item')}>\r\n                                <label className={cx('form-group-item-label')} htmlFor=\"\">\r\n                                    Tên chủ thẻ\r\n                                </label>\r\n                                <input\r\n                                    id=\"owner\"\r\n                                    name=\"owner\"\r\n                                    value={CheckoutPayment.values.owner}\r\n                                    onChange={CheckoutPayment.handleChange}\r\n                                    className={cx('form-group-item-input')}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nhập tên chủ thẻ\"\r\n                                />\r\n                            </div>\r\n                            <div className={cx('form-group-item')}>\r\n                                <label className={cx('form-group-item-label')} htmlFor=\"\">\r\n                                    Số thẻ\r\n                                </label>\r\n\r\n                                <div className={cx('form-group-item-input-append')}>\r\n                                    <span className={cx('form-group-item-input-append-icon')}>\r\n                                        <Card />\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    type=\"digits\"\r\n                                    placeholder=\"Nhập số thẻ\"\r\n                                    maxlength=\"19\"\r\n                                    minlength=\"14\"\r\n                                    id=\"numberCard\"\r\n                                    name=\"numberCard\"\r\n                                    value={CheckoutPayment.values.numberCard}\r\n                                    onChange={CheckoutPayment.handleChange}\r\n                                    className={cx('form-group-item-input', 'number')}\r\n                                />\r\n                            </div>\r\n                            <div className={cx('form-group-item')}>\r\n                                <div className={cx('form-group-item-datetime')}>\r\n                                    <p>\r\n                                        <label className={cx('form-group-item-label')} htmlFor=\"\">\r\n                                            Ngày bắt đầu:\r\n                                        </label>\r\n                                        <label className={cx('form-group-item-label')} htmlFor=\"\">\r\n                                            Ngày hết hạn:\r\n                                        </label>\r\n                                    </p>\r\n                                    <div className={cx('form-group-item-datetime-box')}>\r\n                                        <input\r\n                                            id=\"dateStarted\"\r\n                                            name=\"dateStarted\"\r\n                                            value={CheckoutPayment.values.dateStarted}\r\n                                            onChange={CheckoutPayment.handleChange}\r\n                                            className={cx('form-group-item-input')}\r\n                                            type=\"date\"\r\n                                        />\r\n                                        <input\r\n                                            id=\"dateExpired\"\r\n                                            name=\"dateExpired\"\r\n                                            value={CheckoutPayment.values.dateExpired}\r\n                                            onChange={CheckoutPayment.handleChange}\r\n                                            className={cx('form-group-item-input')}\r\n                                            type=\"date\"\r\n                                        />\r\n                                    </div>\r\n                                    {/* <select className={cx('form-group-item-input')}></select> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={cx('form-check-default')}>\r\n                            <input type=\"checkbox\" className={cx('form-check-default-checkbox')} />\r\n                            <span className={cx('form-check-default-staysigned')}>Đặt làm mặc định</span>\r\n                        </div>\r\n                        <div className={cx('form-group-submit')}>\r\n                            <Button type=\"submit\" primary rounded login>\r\n                                Kiểm tra đơn hàng\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Payment;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Payment_wrapper__2bVb9\",\"body\":\"Payment_body__hgRuG\",\"tittle\":\"Payment_tittle__pjuVi\",\"tittle-text\":\"Payment_tittle-text__PTU6d\",\"tittle-tip\":\"Payment_tittle-tip__sypQu\",\"form\":\"Payment_form__vhNAy\",\"form-box\":\"Payment_form-box__FV6mC\",\"form-check\":\"Payment_form-check__vFhQE\",\"form-check-group\":\"Payment_form-check-group__-P0CR\",\"form-check-name\":\"Payment_form-check-name__+vb3q\",\"form-check-radio\":\"Payment_form-check-radio__WC+nI\",\"form-check-iconList\":\"Payment_form-check-iconList__-zQ18\",\"form-check-icon\":\"Payment_form-check-icon__ideiP\",\"form-check-icon-data\":\"Payment_form-check-icon-data__W9TYl\",\"form-group\":\"Payment_form-group__1EyGQ\",\"form-group-item\":\"Payment_form-group-item__BIaR9\",\"form-group-item-label\":\"Payment_form-group-item-label__qXgMv\",\"form-group-item-input\":\"Payment_form-group-item-input__kFxo5\",\"number\":\"Payment_number__Pb3-2\",\"form-group-item-input-append\":\"Payment_form-group-item-input-append__aZVw9\",\"form-group-item-datetime\":\"Payment_form-group-item-datetime__iVRSO\",\"form-group-item-datetime-box\":\"Payment_form-group-item-datetime-box__qOr0B\",\"form-check-default\":\"Payment_form-check-default__SzPtq\",\"form-check-default-checkbox\":\"Payment_form-check-default-checkbox__H14Px\",\"form-check-default-staysigned\":\"Payment_form-check-default-staysigned__exkzO\",\"form-group-submit\":\"Payment_form-group-submit__Rhlgu\"};"],"names":["cx","classNames","user","useSelector","authRemainingSelector","currentUser","login","accessToken","navigate","useNavigate","dispatch","useDispatch","CheckoutPayment","useFormik","initialValues","validationSchema","Yup","bankname","required","owner","numberCard","dateExpired","onSubmit","values","console","log","bank","dataBankType","find","item","bankName","id","data","type","info","Id","userBank","BankName","BankNumber","BankCode","bankCode","AccountName","ExpiredDate","StartedDate","dateStarted","BankTypeId","CheckOutSlice","fetchApi","dataUpdateAPi","dataAddAPi","authServices","axiosJWT","res","setResBank","useState","resBank","useEffect","status","setDataBankType","setUserBank","createAxios","AuthSlice","dataItem","dataUserBank","bankNumber","accountName","expiredDate","startedDate","className","handleSubmit","htmlFor","src","loading","name","onChange","handleChange","placeholder","value","label","selected","map","i","maxlength","minlength","Button","primary","rounded"],"sourceRoot":""}